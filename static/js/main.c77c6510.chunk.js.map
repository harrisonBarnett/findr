{"version":3,"sources":["components/SelectionWindow.js","static/images/futurama.png","components/Gameboard.js","static/images/futurama-logo.png","components/Scorebox.js","components/Dropdown.js","components/Start.js","firebase_config.js","components/Leaderboard.js","components/End.js","components/Prompt.js","charsLevel1.js","static/images/hypnotoad.png","static/images/thatguy.png","static/images/conan.png","static/images/slurms.png","static/images/whitey.png","App.js","index.js"],"names":["StyledContainer","styled","div","SelectionWindow","props","id","style","display","coords","length","left","top","Gameboard","show","handleGameboardClick","checkCharacter","selectionCoords","characters","useState","avis","setAvis","useEffect","onClick","src","Image","alt","StyledLogo","img","CharacterAvi","CharacterList","Scorebox","Logo","map","character","className","backgroundImage","opacity","found","name","StyledComponent","StyledList","DropDown","StyledButton","button","Start","gameState","startGame","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","getFirestore","StyledSubmitContainer","StyledPlayerlist","StyledEntry","Leaderboard","nameSubmit","setNameSubmit","newName","setNewName","players","setPlayers","playersCollectionRef","collection","addPlayer","a","addDoc","score","h","m","s","ms","getPlayers","getDocs","data","docs","doc","value","onChange","event","target","pointerEvents","player","StyledTitles","Button","End","elapsed","resetGame","setScore","slice","parseInt","Prompt","charsLevel1","rangeX","rangeY","App","setGameState","setSelectionCoords","foundCounter","setFoundCounter","timerStart","setTimerStart","timerEnd","setTimerEnd","toCheck","filter","alert","tempCharacters","push","Date","now","bounds","document","querySelector","getBoundingClientRect","x","clientX","y","clientY","Dropdown","forEach","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c77c6510.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport styled from 'styled-components'\r\nconst StyledContainer = styled.div`\r\nposition: absolute;\r\nheight: 50px;\r\nwidth: 50px;\r\ntransform: translate(-25px, -25px);\r\nborder-radius: 50%;\r\npointer-events: none;\r\noverflow: unset;\r\nborder: 2px solid rgba(255, 0, 0, .5);\r\n`\r\nconst SelectionWindow = props => {\r\n    return (\r\n        <StyledContainer \r\n            id='selection-window'\r\n            style={{\r\n                display: props.coords.length === 0 ? 'none' : 'block',\r\n                left: `${props.coords[0]}px`,\r\n                top: `${props.coords[1]}px`\r\n            }}>    \r\n        </StyledContainer>\r\n    );\r\n};\r\n\r\nexport default SelectionWindow;","export default __webpack_public_path__ + \"static/media/futurama.28c70fc7.png\";","import React from 'react';\r\nimport { useState, useEffect } from 'react'\r\n\r\nimport SelectionWindow from './SelectionWindow'\r\n\r\nimport styled from 'styled-components'\r\nimport Image from '../static/images/futurama.png'\r\nconst StyledContainer = styled.div`\r\nposition: relative;\r\nwidth: fit-content;\r\nheight: fit-content;\r\n`\r\n\r\nconst Gameboard = ({show, handleGameboardClick, checkCharacter, selectionCoords, characters}) => {\r\n    const [avis, setAvis] =  useState(characters)\r\n\r\n    useEffect(() => {\r\n        setAvis(characters)\r\n    }, [characters])\r\n    return (\r\n        <StyledContainer \r\n        id='gameboard'\r\n        style={{ display:show }}\r\n        onClick={handleGameboardClick}>\r\n            <img src={Image} alt='collage of Futurama characters'></img>\r\n            <SelectionWindow \r\n            coords={selectionCoords}\r\n            characters={avis}\r\n            checkCharacter={checkCharacter}/>\r\n        </StyledContainer>\r\n    );\r\n};\r\n\r\nexport default Gameboard;","export default __webpack_public_path__ + \"static/media/futurama-logo.87be2040.png\";","import React from 'react'\r\nimport { useState, useEffect } from 'react'\r\n\r\nimport styled from 'styled-components'\r\nimport Logo from '../static/images/futurama-logo.png'\r\n\r\nconst StyledContainer = styled.div`\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    padding: 2em;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    gap: .5em;\r\n    border-radius: 0 0 1em 0;\r\n    background-image: linear-gradient(rgba(10,140,186,1),\r\n        rgba(10,140,186,.5));\r\n    box-shadow: \r\n        1px 1px 4px rgba(0,0,0,.4),\r\n        2px 2px 8px rgba(0,0,0,.15);\r\n`\r\nconst StyledLogo = styled.img`\r\n    width: 25vmax;\r\n`\r\nconst CharacterAvi = styled.div`\r\n    height: 5vmax;\r\n    width: 5vmax;\r\n    border-radius: .5em;\r\n\r\n    background-position: center;\r\n    background-size: cover;\r\n`\r\nconst CharacterList = styled.div`\r\n    display: flex;\r\n    gap: .5em;\r\n`\r\n\r\nconst Scorebox = ({ show, characters}) => {\r\n    const [avis, setAvis] = useState(characters)\r\n\r\n    useEffect(() => {\r\n        setAvis(characters)\r\n    }, [characters])\r\n    return (\r\n        <StyledContainer \r\n        id='scorebox'\r\n        style={{display: show}}>\r\n            <StyledLogo src={Logo} />\r\n            <CharacterList id='character-list'>\r\n                {avis.map(character => {\r\n                    return <CharacterAvi\r\n                            className='scorebox-character-avi'\r\n                            key={character.name}\r\n                            style={{ \r\n                                backgroundImage: `url(${character.img})`,\r\n                                opacity: character.found ? '.5' : '1' }}>\r\n                            </CharacterAvi>\r\n                })}\r\n            </CharacterList>\r\n        </StyledContainer>\r\n    )\r\n}\r\n\r\nexport default Scorebox","import React from 'react';\r\nimport { useState, useEffect } from 'react'\r\n\r\nimport styled from 'styled-components'\r\nconst StyledComponent = styled.div`\r\npadding: 2.5vmax;\r\nposition: absolute;\r\nz-index: 3;\r\npointer-events: initial;\r\nborder-radius: .5em;\r\nbackground: rgba(10,140,186,.75);\r\nbox-shadow: \r\n1px 1px 4px rgba(0,0,0,.4),\r\n2px 2px 8px rgba(0,0,0,.15);\r\n`\r\nconst StyledList = styled.div`\r\ndisplay: flex;\r\ngap: .5em;\r\n`\r\nconst CharacterAvi = styled.div`\r\n    width: 5vmax;\r\n    height: 5vmax;\r\n    border-radius .5em;\r\n\r\n    background-position: center;\r\n    background-size: cover;\r\n`\r\nconst DropDown = ({ characters, checkCharacter, coords, display}) => {\r\n    const [avis, setAvis] = useState(characters)\r\n\r\n    useEffect(() => {\r\n        setAvis(characters)\r\n    }, [characters])\r\n    return (\r\n        <StyledComponent \r\n        id='character-dropdown'\r\n        style={{\r\n            display: display,\r\n            left: `${coords[0] + 20}px`,\r\n            top: `${coords[1] + 20}px`\r\n        }}>\r\n            <StyledList>\r\n                {avis.map(character => {\r\n                    return <CharacterAvi\r\n                    key={character.name}\r\n                    style={{\r\n                        opacity: character.found ? '.5' : '1',\r\n                        backgroundImage: `url(${character.img})`\r\n                    }}\r\n                    onClick={()=> {checkCharacter(character.name)}}>\r\n                    </CharacterAvi>\r\n                })}\r\n            </StyledList>\r\n        </StyledComponent>\r\n    );\r\n};\r\nexport default DropDown;","import React from 'react';\r\nimport Logo from '../static/images/futurama-logo.png'\r\n\r\nimport styled from 'styled-components'\r\nconst StyledContainer = styled.div`\r\n    height: 100vh;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    gap: 1em;\r\n` \r\nconst StyledLogo = styled.img`\r\n    width: 100vw;\r\n`\r\nconst StyledButton = styled.button`\r\n    margin: 0 auto;\r\n    border: none;\r\n    outline: none;\r\n    padding: 1em 2em;\r\n    color: white;\r\n    font-size: 1em;\r\n    background: #BA2317;\r\n`\r\n\r\nconst Start = props => {\r\n    return (\r\n        <StyledContainer \r\n        style={{display: props.gameState === 'start' ? 'flex' : 'none'}}>\r\n            <StyledLogo \r\n            src={Logo}/>\r\n            <StyledButton onClick={props.startGame}>start the game</StyledButton>\r\n        </StyledContainer>\r\n    );\r\n};\r\n\r\nexport default Start;","import { initializeApp } from \"firebase/app\";\r\nimport { getFirestore } from '@firebase/firestore'\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAX7VCOGf1ntoowI6VawbOJP4RuqOaB7LY\",\r\n  authDomain: \"findr-956d6.firebaseapp.com\",\r\n  projectId: \"findr-956d6\",\r\n  storageBucket: \"findr-956d6.appspot.com\",\r\n  messagingSenderId: \"40927690533\",\r\n  appId: \"1:40927690533:web:6c923963825658bb5964cc\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n\r\nexport const db = getFirestore(app)","import React from 'react';\r\nimport { useState, useEffect } from 'react'\r\n\r\nimport { db } from '../firebase_config'\r\nimport { collection, getDocs, addDoc } from 'firebase/firestore'\r\n\r\nimport styled from 'styled-components'\r\nconst StyledContainer = styled.div`\r\n    height: 100%;\r\n`\r\nconst StyledSubmitContainer = styled.div`\r\n    padding: 2.5vmax;\r\n    position: fixed;\r\n    bottom: 0;\r\n    left: 10%;\r\n    right: 10%;\r\n    \r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    gap: 1em;\r\n\r\n    background: #ba2317;\r\n    border-radius: .5em .5em 0 0;\r\n    box-shadow: 1px 1px 4px rgba(44, 81, 95, 0.75),\r\n                -1px -1px 4px rgba(44, 81, 95, .75);\r\n`\r\nconst StyledPlayerlist = styled.div`\r\n   padding-bottom: 12vmax;\r\n   height: 100%;\r\n   display: flex;\r\n   flex-direction: column;\r\n   gap: 1em;\r\n`\r\nconst StyledEntry = styled.div`\r\n    min-width: 600px;\r\n    padding: 2.5vmax;\r\n    margin: 0 auto;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    gap: 1em;\r\n\r\n    font-size: 2.5vmax;\r\n    text-transform: uppercase;\r\n    color: white;\r\n    text-shadow: 1px 1px 2px rgba(0,0,0,.15);\r\n    background: #2cd7f1;\r\n    border-radius: .5em;\r\n    box-shadow: 1px 1px 4px rgba(44, 81, 95, 0.35),\r\n    -1px -1px 4px rgba(44, 81, 95, .35);\r\n`\r\n\r\nconst Leaderboard = props => {\r\n    const [nameSubmit, setNameSubmit] = useState(false)\r\n\r\n    const [newName, setNewName] = useState('')\r\n    const [players, setPlayers] = useState([])\r\n    const playersCollectionRef = collection(db, 'players')\r\n\r\n    const addPlayer = async () => {\r\n        setNameSubmit(true)\r\n        setNewName('')\r\n        await addDoc(playersCollectionRef, {name: newName, score: props.score, h: props.h, m: props.m, s: props.s, ms: props.ms})\r\n    }\r\n    useEffect(() => {\r\n        const getPlayers = async () => {\r\n            const data = await getDocs(playersCollectionRef)\r\n            setPlayers(data.docs.map((doc) => ({...doc.data(), id: doc.id})))\r\n        }\r\n        getPlayers()\r\n    }, [playersCollectionRef])\r\n    useEffect(() => {\r\n        setNameSubmit(false)\r\n    }, [props.score])\r\n    return (\r\n        <StyledContainer>\r\n            <StyledSubmitContainer>\r\n                <h3>add your score to the annals of find-o-rama history</h3>\r\n                <div>\r\n                    <input \r\n                    id='leaderboard-input'\r\n                    value={newName}\r\n                    onChange={(event) => {setNewName(event.target.value)}}\r\n                    style={{\r\n                        opacity: nameSubmit ? '.5' : '1',\r\n                        pointerEvents: nameSubmit ? 'none' : 'all'\r\n                    }}></input>\r\n                    <button \r\n                    onClick={addPlayer}\r\n                    style={{\r\n                        opacity: nameSubmit ? '.5' : '1',\r\n                        pointerEvents: nameSubmit ? 'none' : 'all'\r\n                    }}>add your score</button>\r\n                </div>\r\n            </StyledSubmitContainer>\r\n            \r\n            <StyledPlayerlist \r\n            id='leaderboard-list'>\r\n                {players.map((player)=> {\r\n                    return <StyledEntry key={player.id}>\r\n                            <p>{player.name}</p>\r\n                            <p>{player.h}:{player.m}:{player.s}:{player.ms}</p>\r\n                        </StyledEntry>\r\n                })}\r\n            </StyledPlayerlist>\r\n        </StyledContainer>\r\n    );\r\n};\r\n\r\nexport default Leaderboard;","import React, { useEffect, useState } from 'react';\r\nimport Leaderboard from './Leaderboard'\r\n\r\n\r\n\r\nimport styled from 'styled-components'\r\nconst StyledContainer = styled.div`\r\n    width: 100vw;\r\n    height: 100%;\r\n    flex-direction: column;\r\n`\r\nconst StyledTitles = styled.div`\r\n    padding: 2.5vmax;\r\n    text-align: center;\r\n    color: white;\r\n    text-shadow: 1px 1px 2px rgba(0,0,0,.15);\r\n`\r\nconst Button = styled.div`\r\n    padding: 1em;\r\n    position: absolute;\r\n    right: .5em;\r\n    top: .5em;\r\n    width: 5em;\r\n    cursor: pointer;\r\n    font-family: Arial;\r\n    color: white;\r\n    background: #ba2317;\r\n    border-radius: .5em;\r\n    box-shadow: 1px 1px 4px rgba(44, 81, 95, 0.35),\r\n    -1px -1px 4px rgba(44, 81, 95, .35);\r\n`\r\nconst End = ({gameState, elapsed, resetGame}) => {\r\n    const [score, setScore] = useState(elapsed)\r\n\r\n    var ms = score + ''\r\n    ms = ms.slice(ms.length - 3, ms.length)\r\n    var s = parseInt((score /1000 ) % 60)\r\n    if(s<10){s = '0' + s}\r\n    var m = parseInt((score / (1000 * 60)) % 60)\r\n    if(m < 10){m = '0' + m}\r\n    var h = parseInt((score / (1000 * 60 * 60)) % 60)\r\n    if(h < 10)(h = '0' + h)\r\n\r\n    useEffect(() => {\r\n        setScore(elapsed)\r\n    }, [elapsed])\r\n    return (\r\n        <StyledContainer \r\n        id='end-prompt'\r\n        style={{display: gameState === 'end' ? 'flex' : 'none'}}>\r\n            <StyledTitles>\r\n                <h2>Whimmy wham wham wozzle! You finished in {h}:{m}:{s}:{ms}!</h2>\r\n                <h3>(that's {score} milliseconds!)</h3>\r\n                <Button onClick={resetGame}>try and beat your score!</Button>\r\n            </StyledTitles>\r\n            <Leaderboard \r\n            score={score}\r\n            h={h}\r\n            m={m}\r\n            s={s}\r\n            ms={ms}/>\r\n        </StyledContainer>\r\n    );\r\n};\r\n\r\nexport default End","import React from 'react';\r\nimport { useState, useEffect } from 'react'\r\nimport Start from './Start'\r\nimport End from './End'\r\n\r\nimport styled from 'styled-components';\r\nconst StyledContainer = styled.div`\r\n    min-height: 100vh;\r\n    background: #0a8cba;\r\n`\r\nconst Prompt = ({gameState, show, elapsed, startGame, resetGame}) => {\r\n    const [score, setScore] = useState(elapsed)\r\n\r\n    useEffect(() => {\r\n        setScore(score)\r\n    }, [gameState])\r\n    return (\r\n        <StyledContainer \r\n        id='prompt-screen'\r\n        style={{ display: show }}>\r\n            <Start \r\n            startGame={startGame}\r\n            gameState={gameState}/>\r\n            <End\r\n            elapsed={elapsed}\r\n            resetGame={resetGame} \r\n            gameState={gameState}/>\r\n        </StyledContainer>\r\n    );\r\n};\r\n\r\nexport default Prompt;","import hypnoToad from './static/images/hypnotoad.png'\r\nimport thatGuy from './static/images/thatguy.png'\r\nimport conan from './static/images/conan.png'\r\nimport slurms from './static/images/slurms.png'\r\nimport whitey from './static/images/whitey.png'\r\n\r\nconst charsLevel1 = [\r\n    {\r\n        name: 'Hypno Toad',\r\n        rangeX: [227, 275],\r\n        rangeY: [387, 420],\r\n        found: false,\r\n        img: hypnoToad\r\n    },\r\n    {\r\n        name: 'That Guy',\r\n        rangeX: [1304, 1328],\r\n        rangeY: [495, 523],\r\n        found: false,\r\n        img: thatGuy\r\n    },\r\n    {\r\n        name: \"Conan O'Brien\",\r\n        rangeX: [829, 858],\r\n        rangeY: [422, 460],\r\n        found: false,\r\n        img: conan\r\n    },\r\n    {\r\n        name: 'Slurms McKenzie',\r\n        rangeX: [642, 705],\r\n        rangeY: [436, 487],\r\n        found: false,\r\n        img: slurms\r\n    },\r\n    {\r\n        name: 'Judge Whitey',\r\n        rangeX: [1096, 1121],\r\n        rangeY: [655, 682],\r\n        found: false,\r\n        img: whitey\r\n    },\r\n]\r\nexport default charsLevel1","export default __webpack_public_path__ + \"static/media/hypnotoad.ab63a8a2.png\";","export default __webpack_public_path__ + \"static/media/thatguy.87f57b57.png\";","export default __webpack_public_path__ + \"static/media/conan.aecac918.png\";","export default __webpack_public_path__ + \"static/media/slurms.4b63ac12.png\";","export default __webpack_public_path__ + \"static/media/whitey.65b56ab4.png\";","import { useState, useEffect, useReducer } from 'react'\r\nimport Gameboard from './components/Gameboard'\r\nimport Scorebox from './components/Scorebox'\r\nimport Dropdown from './components/Dropdown'\r\nimport Prompt from './components/Prompt'\r\nimport charsLevel1 from './charsLevel1'\r\nimport './App.css'\r\n\r\nconst App = ()=> {\r\n  var characters = charsLevel1\r\n  const [gameState, setGameState] = useState('start')\r\n  const [selectionCoords, setSelectionCoords] = useState([])\r\n  const [foundCounter, setFoundCounter] = useState(0)\r\n  const [timerStart, setTimerStart] = useState('')\r\n  const [timerEnd, setTimerEnd] = useState('')\r\n\r\n  // handle when a user clicks on a character \r\n  const handleGameboardClick = (event) => {\r\n    const parent = document.querySelector('.App')\r\n    const bounds = parent.getBoundingClientRect()\r\n    const x = event.clientX - bounds.left\r\n    const y = event.clientY - bounds.top\r\n    setSelectionCoords([x, y])\r\n  }\r\n  // start the game\r\n  function startGame() {\r\n    setGameState('play')\r\n    setTimerStart(Date.now())\r\n  }\r\n  // check local character array to see if the character has been found yet\r\n  // if not found, then cross-check x/y ranges and mutate array if found\r\n  function checkCharacter(name) {\r\n    const toCheck = characters.filter(character => character.name === name)[0]\r\n    if(toCheck.found) {\r\n      alert('you already found this one, dummy!')\r\n      setSelectionCoords([])\r\n      return\r\n    }\r\n    if(\r\n      (selectionCoords[0] >= toCheck.rangeX[0] && selectionCoords[0] <= toCheck.rangeX[1]) &&\r\n      (selectionCoords[1] >= toCheck.rangeY[0] && selectionCoords[1] <= toCheck.rangeY[1])){\r\n        const tempCharacters = characters.filter(character => character.name !== name)\r\n        toCheck.found = true\r\n        tempCharacters.push(toCheck)\r\n        characters = tempCharacters\r\n        setSelectionCoords([])\r\n        setFoundCounter(foundCounter + 1)\r\n      } else {\r\n        setSelectionCoords([])\r\n      }\r\n  }\r\n  function checkWin() {\r\n    setTimerEnd(Date.now())\r\n    if(foundCounter === 5) {\r\n      alert('you did it, good job')\r\n      setGameState('end')\r\n    }\r\n  }\r\n  // reset the state of the game\r\n  function resetGame() {\r\n    characters.forEach(character => {\r\n      character.found = false\r\n    })\r\n    setFoundCounter(0)\r\n    setTimerStart('')\r\n    setTimerEnd('')\r\n    setGameState('start')\r\n  }\r\n  useEffect(() => {\r\n    checkWin()\r\n  }, [foundCounter])\r\n  return (\r\n    <div className='App'>\r\n      <Gameboard \r\n      show={gameState === 'play' ? 'block' : 'none'}\r\n      handleGameboardClick={handleGameboardClick}\r\n      checkCharacter={checkCharacter}\r\n      selectionCoords={selectionCoords}\r\n      characters={characters}\r\n      foundCounter={foundCounter}/>\r\n      <Dropdown \r\n          characters={characters}\r\n          checkCharacter={checkCharacter}\r\n          coords={selectionCoords}\r\n          display={selectionCoords.length === 0 ? 'none' : 'block'}/>\r\n      <Scorebox \r\n      show={gameState === 'play' ? 'flex' : 'none'}\r\n      characters={characters}/>\r\n      <Prompt \r\n      elapsed={timerEnd - timerStart}\r\n      startGame={startGame}\r\n      resetGame={resetGame}\r\n      show={gameState === 'play' ? 'none' : 'block'}\r\n      gameState={gameState}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}